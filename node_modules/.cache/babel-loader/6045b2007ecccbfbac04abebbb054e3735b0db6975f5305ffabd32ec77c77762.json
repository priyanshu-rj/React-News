{"ast":null,"code":"var _jsxFileName = \"E:\\\\API-React\\\\api\\\\src\\\\Story.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Story = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // {handleInputChange}\n  const [query, setQuery] = useState('');\n  const API = \"http://hn.algolia.com/api/v1/search?query=\";\n  const fetchApiData = async () => {\n    setIsLoading(true);\n    const res = await fetch(API + query);\n    const data = JSON.parse(await res.text());\n    setIsLoading(false);\n    setData(data.hits);\n  };\n  useEffect(() => {\n    fetchApiData();\n  }, [query]);\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  // const handle = () => {\n  //   fetchApiData();\n  // };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: query,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: query,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\"       \", item.title, \"      \"]\n      }, item.objectID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(Story, \"cGSVEtDAQVneWSRLVa/dOr07NYM=\");\n_c = Story;\nexport default Story;\nvar _c;\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Story","_s","data","setData","isLoading","setIsLoading","query","setQuery","API","fetchApiData","res","fetch","JSON","parse","text","hits","handleInputChange","event","target","value","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","item","title","objectID","_c","$RefreshReg$"],"sources":["E:/API-React/api/src/Story.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nconst Story = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n    // {handleInputChange}\r\n  const [query, setQuery] = useState('');\r\n  const API =\"http://hn.algolia.com/api/v1/search?query=\";\r\n\r\n  const fetchApiData = async () => {\r\n    setIsLoading(true);\r\n    const res = await fetch(API + query);\r\n    const data = JSON.parse(await res.text());\r\n    setIsLoading(false);\r\n    setData(data.hits);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApiData();\r\n  },[query]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n  \r\n   \r\n  // const handle = () => {\r\n  //   fetchApiData();\r\n  // };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <>\r\n      <input type=\"text\" placeholder='Search' value={query} onChange={handleInputChange} />\r\n        <h1>Loading...</h1>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input type=\"text\" placeholder='Search' value={query} onChange={handleInputChange} />\r\n        {/* <button onClick={handle}>Search</button> */}\r\n      </div>\r\n      {data.map((item) => {\r\n        return (\r\n          <ul key={item.objectID}>       {item.title}      </ul>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C;EACF,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,GAAG,GAAE,4CAA4C;EAEvD,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BJ,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,GAAGF,KAAK,CAAC;IACpC,MAAMJ,IAAI,GAAGU,IAAI,CAACC,KAAK,CAAC,MAAMH,GAAG,CAACI,IAAI,EAAE,CAAC;IACzCT,YAAY,CAAC,KAAK,CAAC;IACnBF,OAAO,CAACD,IAAI,CAACa,IAAI,CAAC;EACpB,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACde,YAAY,EAAE;EAChB,CAAC,EAAC,CAACH,KAAK,CAAC,CAAC;EAEV,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnCV,QAAQ,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAGD;EACA;EACA;;EAEA,IAAIf,SAAS,EAAE;IACb,oBACEP,OAAA,CAAAE,SAAA;MAAAqB,QAAA,gBACAvB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,QAAQ;QAACH,KAAK,EAAEb,KAAM;QAACiB,QAAQ,EAAEP;MAAkB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnF9B,OAAA;QAAAuB,QAAA,EAAI;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,gBAClB;EAEP;EAEA,oBACE9B,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QAAOwB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,QAAQ;QAACH,KAAK,EAAEb,KAAM;QAACiB,QAAQ,EAAEP;MAAkB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEjF,EACLzB,IAAI,CAAC0B,GAAG,CAAEC,IAAI,IAAK;MAClB,oBACEhC,OAAA;QAAAuB,QAAA,GAAwB,SAAO,EAACS,IAAI,CAACC,KAAK,EAAC,QAAM;MAAA,GAAxCD,IAAI,CAACE,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAgC;IAE1D,CAAC,CAAC;EAAA,gBACD;AAEP,CAAC;AAAC1B,EAAA,CAlDID,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}