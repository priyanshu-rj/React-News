{"ast":null,"code":"var _jsxFileName = \"E:\\\\API-React\\\\api\\\\src\\\\Story.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Story = () => {\n  _s();\n  // let isLoading = true;\n  let API = \"http://hn.algolia.com/api/v1/search?query=html\";\n  const fetchApiData = async url => {\n    const res = await fetch(url);\n    const data = JSON.parse(await res.text());\n    //  isLoading = false;\n    console.log(data);\n  };\n  useEffect(() => {\n    fetchApiData(API);\n  }, [API]);\n\n  // if(isLoading){\n  //     return(\n  //         <><h1>Loading......</h1></>\n  //     )\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(Story, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Story;\nexport default Story;\nvar _c;\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Story","_s","API","fetchApiData","url","res","fetch","data","JSON","parse","text","console","log","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/API-React/api/src/Story.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst Story = () => {\r\n// let isLoading = true;\r\n let API =\"http://hn.algolia.com/api/v1/search?query=html\"\r\n\r\n\r\n const fetchApiData = async(url) =>{\r\n     const res = await fetch(url);\r\n     const data = JSON.parse(await res.text());\r\n    //  isLoading = false;\r\n     console.log(data);\r\n }\r\n\r\n\r\nuseEffect(()=>{\r\n      fetchApiData(API);\r\n    }, [API]);\r\n\r\n// if(isLoading){\r\n//     return(\r\n//         <><h1>Loading......</h1></>\r\n//     )\r\n// }\r\n  return (\r\n    <>\r\n    {\r\n      data.map((data) => {\r\n                   return(\r\n                    <li>{data}</li>\r\n                   )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Story"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACC,IAAIC,GAAG,GAAE,gDAAgD;EAGzD,MAAMC,YAAY,GAAG,MAAMC,GAAG,IAAI;IAC9B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC5B,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,MAAMJ,GAAG,CAACK,IAAI,EAAE,CAAC;IAC1C;IACCC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EACrB,CAAC;EAGFZ,SAAS,CAAC,MAAI;IACRQ,YAAY,CAACD,GAAG,CAAC;EACnB,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;;EAEb;EACA;EACA;EACA;EACA;EACE,oBACEL,OAAA,CAAAE,SAAA;IAAAc,QAAA,EAEEN,IAAI,CAACO,GAAG,CAAEP,IAAI,IAAK;MACN,oBACCV,OAAA;QAAAgB,QAAA,EAAKN;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAE7B,CAAC;EAAC,iBACD;AAEP,CAAC;AAAAjB,EAAA,CAhCKD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAkCX,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}